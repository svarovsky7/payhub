[
  {
    "function": "public.calculate_material_class_level()",
    "returns": "trigger",
    "language": "plpgsql",
    "security": "invoker",
    "summary": "",
    "details": "",
    "touches_tables": [],
    "invoked_by": [],
    "side_effects": []
  },
  {
    "function": "public.delete_project(project_id_param integer)",
    "returns": "boolean",
    "language": "plpgsql",
    "security": "definer",
    "summary": "Removes a project together with all user assignments.",
    "details": "Deletes linking rows from public.user_projects before removing the project entry and reports whether anything was deleted.",
    "touches_tables": [
      "public.projects",
      "public.user_projects"
    ],
    "invoked_by": [],
    "side_effects": [
      "DELETE from public.user_projects",
      "DELETE from public.projects"
    ]
  },
  {
    "function": "public.get_material_class_path(class_id bigint)",
    "returns": "text",
    "language": "plpgsql",
    "security": "invoker",
    "summary": "",
    "details": "",
    "touches_tables": [],
    "invoked_by": [],
    "side_effects": []
  },
  {
    "function": "public.handle_new_user()",
    "returns": "trigger",
    "language": "plpgsql",
    "security": "invoker",
    "summary": "Seeds public.user_profiles when auth.users gains a new row.",
    "details": "Copies id, email, and derived full_name from the auth.users record into public.user_profiles for application lookups.",
    "touches_tables": [
      "public.user_profiles"
    ],
    "invoked_by": [
      "auth.on_auth_user_created"
    ],
    "side_effects": [
      "INSERT into public.user_profiles"
    ]
  },
  {
    "function": "public.update_material_request_items_count()",
    "returns": "trigger",
    "language": "plpgsql",
    "security": "invoker",
    "summary": "Keeps material_requests.total_items in sync with child records.",
    "details": "After INSERT or DELETE on public.material_request_items the trigger recomputes total_items for the parent request id.",
    "touches_tables": [],
    "invoked_by": [
      "public.update_material_request_items_count_trigger"
    ],
    "side_effects": [
      "UPDATE public.material_requests"
    ]
  },
  {
    "function": "public.update_updated_at_column()",
    "returns": "trigger",
    "language": "plpgsql",
    "security": "invoker",
    "summary": "Keeps updated_at timestamps fresh on write-heavy tables.",
    "details": "Sets NEW.updated_at to now() in BEFORE UPDATE triggers so audit consumers get monotonic timestamps.",
    "touches_tables": [],
    "invoked_by": [
      "public.update_approval_routes_updated_at",
      "public.update_attachments_updated_at",
      "public.update_contract_statuses_updated_at",
      "public.update_contractors_updated_at",
      "public.update_contracts_updated_at",
      "public.update_departments_updated_at",
      "public.update_employees_updated_at",
      "public.update_invoice_statuses_updated_at",
      "public.update_invoice_types_updated_at",
      "public.update_invoices_updated_at",
      "public.update_material_classes_updated_at",
      "public.update_material_nomenclature_updated_at",
      "public.update_material_requests_updated_at",
      "public.update_payment_approvals_updated_at",
      "public.update_payment_statuses_updated_at",
      "public.update_payment_types_updated_at",
      "public.update_payments_updated_at",
      "public.update_positions_updated_at",
      "public.update_projects_updated_at",
      "public.update_roles_updated_at",
      "public.update_user_profiles_updated_at",
      "public.update_workflow_stages_updated_at"
    ],
    "side_effects": [
      "mutates NEW.updated_at"
    ]
  }
]
