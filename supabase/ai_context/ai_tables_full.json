[
  {
    "table": "public.approval_routes",
    "summary": "Маршруты согласования платежей. Один тип счета может иметь несколько маршрутов.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "description": "Primary key of the approval route."
      },
      {
        "name": "invoice_type_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.invoice_types.id",
        "description": "Invoice type (public.invoice_types.id) this route applies to."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the approval route."
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": true,
        "default": "true",
        "description": "TRUE when the route can be used for new payments."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the route record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the route record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "invoice_type_id",
          "references": "public.invoice_types.id",
          "description": "Invoice type (public.invoice_types.id) this route applies to."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_20081_1_not_null"
        },
        {
          "name": "2200_20081_2_not_null"
        },
        {
          "name": "2200_20081_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_approval_routes_invoice_type",
        "columns": [
          "invoice_type_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_approval_routes_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.approval_steps",
    "summary": "Audit log of actions performed during payment approval.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the approval step entry."
      },
      {
        "name": "payment_approval_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.payment_approvals.id",
        "description": "Payment approval instance (public.payment_approvals.id) this entry belongs to."
      },
      {
        "name": "stage_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.workflow_stages.id",
        "description": "Workflow stage (public.workflow_stages.id) where the action happened."
      },
      {
        "name": "action",
        "type": "text",
        "nullable": false,
        "description": "Recorded action on the stage, e.g. approve or reject."
      },
      {
        "name": "acted_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who performed the action."
      },
      {
        "name": "acted_at",
        "type": "timestamptz",
        "nullable": true,
        "description": "Timestamp when the action was performed."
      },
      {
        "name": "comment",
        "type": "text",
        "nullable": true,
        "description": "Optional free-form note left by the approver."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the audit entry was stored."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "payment_approval_id",
          "references": "public.payment_approvals.id",
          "description": "Payment approval instance (public.payment_approvals.id) this entry belongs to."
        },
        {
          "column": "stage_id",
          "references": "public.workflow_stages.id",
          "description": "Workflow stage (public.workflow_stages.id) where the action happened."
        },
        {
          "column": "acted_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who performed the action."
        }
      ],
      "unique": [
        {
          "name": "approval_steps_payment_approval_id_stage_id_key",
          "columns": [
            "payment_approval_id",
            "stage_id"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_20143_1_not_null"
        },
        {
          "name": "2200_20143_2_not_null"
        },
        {
          "name": "2200_20143_3_not_null"
        },
        {
          "name": "2200_20143_4_not_null"
        },
        {
          "name": "approval_steps_action_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "approval_steps_payment_approval_id_stage_id_key",
        "columns": [
          "payment_approval_id",
          "stage_id"
        ],
        "unique": false
      },
      {
        "name": "idx_approval_steps_acted_by",
        "columns": [
          "acted_by"
        ],
        "unique": false
      },
      {
        "name": "idx_approval_steps_approval",
        "columns": [
          "payment_approval_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.attachments",
    "summary": "Metadata for files uploaded to Supabase Storage.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the attachment and Storage object identifier."
      },
      {
        "name": "original_name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Original filename provided by the user."
      },
      {
        "name": "storage_path",
        "type": "varchar(500)",
        "nullable": false,
        "description": "Path to the object inside Supabase Storage."
      },
      {
        "name": "size_bytes",
        "type": "integer",
        "nullable": false,
        "description": "File size in bytes."
      },
      {
        "name": "mime_type",
        "type": "varchar(100)",
        "nullable": false,
        "description": "Detected MIME type of the file."
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": false,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who uploaded the file."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the attachment record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the attachment metadata was last updated."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "User-provided description of the file content"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who uploaded the file."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_19364_1_not_null"
        },
        {
          "name": "2200_19364_2_not_null"
        },
        {
          "name": "2200_19364_3_not_null"
        },
        {
          "name": "2200_19364_4_not_null"
        },
        {
          "name": "2200_19364_5_not_null"
        },
        {
          "name": "2200_19364_6_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_attachments_created_by",
        "columns": [
          "created_by"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_attachments_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.contract_attachments",
    "summary": "Связь договоров с приложенными файлами",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "uuid_generate_v4()"
      },
      {
        "name": "contract_id",
        "type": "uuid",
        "nullable": false
      },
      {
        "name": "attachment_id",
        "type": "uuid",
        "nullable": false
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [],
      "checks": [
        {
          "name": "2200_21097_1_not_null"
        },
        {
          "name": "2200_21097_2_not_null"
        },
        {
          "name": "2200_21097_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_contract_attachments_attachment_id",
        "columns": [
          "attachment_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contract_attachments_contract_id",
        "columns": [
          "contract_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.contract_invoices",
    "summary": "Связь договоров со счетами",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "uuid_generate_v4()"
      },
      {
        "name": "contract_id",
        "type": "uuid",
        "nullable": false
      },
      {
        "name": "invoice_id",
        "type": "uuid",
        "nullable": false
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [],
      "checks": [
        {
          "name": "2200_21078_1_not_null"
        },
        {
          "name": "2200_21078_2_not_null"
        },
        {
          "name": "2200_21078_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_contract_invoices_contract_id",
        "columns": [
          "contract_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contract_invoices_invoice_id",
        "columns": [
          "invoice_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.contract_statuses",
    "summary": "Справочник статусов договоров",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('contract_statuses_id_seq'::regclass)"
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Уникальный код статуса"
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Название статуса"
      },
      {
        "name": "color",
        "type": "varchar(7)",
        "nullable": true,
        "description": "Цвет для отображения в интерфейсе (HEX)"
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "sort_order",
        "type": "integer",
        "nullable": true,
        "default": "100",
        "description": "Порядок сортировки статусов (меньшие значения показываются первыми)"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "contract_statuses_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_22407_1_not_null"
        },
        {
          "name": "2200_22407_2_not_null"
        },
        {
          "name": "2200_22407_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "contract_statuses_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "idx_contract_statuses_code",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "idx_contract_statuses_sort_order",
        "columns": [
          "sort_order"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_contract_statuses_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.contractors",
    "summary": "Registry of contractors linked to invoices and projects.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('contractors_id_seq'::regclass)",
        "description": "Primary key of the contractor."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Official contractor name stored for invoices."
      },
      {
        "name": "inn",
        "type": "varchar(12)",
        "nullable": true,
        "description": "Russian tax identifier (INN) of the contractor."
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who created the contractor record."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the contractor record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the contractor record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who created the contractor record."
        }
      ],
      "unique": [
        {
          "name": "contractors_inn_key",
          "columns": [
            "inn"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18404_1_not_null"
        },
        {
          "name": "2200_18404_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "contractors_inn_key",
        "columns": [
          "inn"
        ],
        "unique": false
      },
      {
        "name": "idx_contractors_inn",
        "columns": [
          "inn"
        ],
        "unique": false
      },
      {
        "name": "idx_contractors_updated_at",
        "columns": [
          "updated_at DESC"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_contractors_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.contracts",
    "summary": "Договоры с контрагентами",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "uuid_generate_v4()"
      },
      {
        "name": "contract_number",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Номер договора"
      },
      {
        "name": "contract_date",
        "type": "date",
        "nullable": false,
        "description": "Дата заключения договора"
      },
      {
        "name": "payer_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.contractors.id",
        "description": "Ссылка на плательщика (public.contractors.id)"
      },
      {
        "name": "supplier_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.contractors.id",
        "description": "Ссылка на поставщика (public.contractors.id)"
      },
      {
        "name": "vat_rate",
        "type": "numeric(5,2)",
        "nullable": true,
        "default": "20",
        "description": "Ставка НДС в процентах"
      },
      {
        "name": "warranty_period_days",
        "type": "integer",
        "nullable": true,
        "description": "Гарантийный срок в днях"
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Описание договора"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "Пользователь, создавший запись (auth.users.id)"
      },
      {
        "name": "project_id",
        "type": "integer",
        "nullable": true,
        "description": "Проект, связанный с договором"
      },
      {
        "name": "status_id",
        "type": "integer",
        "nullable": true
      },
      {
        "name": "payment_terms",
        "type": "text",
        "nullable": true,
        "description": "Условия оплаты (произвольный текст)"
      },
      {
        "name": "advance_percentage",
        "type": "numeric(5,2)",
        "nullable": true,
        "default": "0",
        "description": "Процент аванса (от 0 до 100)"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "payer_id",
          "references": "public.contractors.id",
          "description": "Ссылка на плательщика (public.contractors.id)"
        },
        {
          "column": "supplier_id",
          "references": "public.contractors.id",
          "description": "Ссылка на поставщика (public.contractors.id)"
        },
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "Пользователь, создавший запись (auth.users.id)"
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_21052_1_not_null"
        },
        {
          "name": "2200_21052_2_not_null"
        },
        {
          "name": "2200_21052_3_not_null"
        },
        {
          "name": "contracts_advance_percentage_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_contracts_contract_date",
        "columns": [
          "contract_date"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_contract_number",
        "columns": [
          "contract_number"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_payer_id",
        "columns": [
          "payer_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_project_id",
        "columns": [
          "project_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_status_id",
        "columns": [
          "status_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_supplier_id",
        "columns": [
          "supplier_id"
        ],
        "unique": false
      },
      {
        "name": "idx_contracts_updated_at",
        "columns": [
          "updated_at DESC"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_contracts_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.departments",
    "summary": "Организационные отделы компании",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('departments_id_seq'::regclass)"
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "departments_name_key",
          "columns": [
            "name"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_20791_1_not_null"
        },
        {
          "name": "2200_20791_2_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "departments_name_key",
        "columns": [
          "name"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_departments_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.employees",
    "summary": "Справочник сотрудников",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('employees_id_seq'::regclass)"
      },
      {
        "name": "last_name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Фамилия сотрудника"
      },
      {
        "name": "first_name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Имя сотрудника"
      },
      {
        "name": "middle_name",
        "type": "varchar(255)",
        "nullable": true,
        "description": "Отчество сотрудника"
      },
      {
        "name": "full_name",
        "type": "varchar(765)",
        "nullable": true,
        "description": "Полное ФИО сотрудника (генерируется автоматически)"
      },
      {
        "name": "department_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.departments.id",
        "description": "Ссылка на отдел (public.departments.id)"
      },
      {
        "name": "position_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.positions.id",
        "description": "Ссылка на должность (public.positions.id)"
      },
      {
        "name": "email",
        "type": "varchar(255)",
        "nullable": true,
        "description": "Рабочий email сотрудника"
      },
      {
        "name": "phone",
        "type": "varchar(50)",
        "nullable": true,
        "description": "Рабочий телефон сотрудника"
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": false,
        "default": "true",
        "description": "Активен ли сотрудник (false = уволен)"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "Пользователь, создавший запись (auth.users.id)"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "department_id",
          "references": "public.departments.id",
          "description": "Ссылка на отдел (public.departments.id)"
        },
        {
          "column": "position_id",
          "references": "public.positions.id",
          "description": "Ссылка на должность (public.positions.id)"
        },
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "Пользователь, создавший запись (auth.users.id)"
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_20817_10_not_null"
        },
        {
          "name": "2200_20817_1_not_null"
        },
        {
          "name": "2200_20817_2_not_null"
        },
        {
          "name": "2200_20817_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_employees_department_id",
        "columns": [
          "department_id"
        ],
        "unique": false
      },
      {
        "name": "idx_employees_full_name",
        "columns": [
          "full_name"
        ],
        "unique": false
      },
      {
        "name": "idx_employees_is_active",
        "columns": [
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "idx_employees_position_id",
        "columns": [
          "position_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_employees_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.invoice_attachments",
    "summary": "Associates invoices with stored attachments.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the invoice-attachment relation."
      },
      {
        "name": "invoice_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.invoices.id",
        "description": "Invoice (public.invoices.id) that the file belongs to."
      },
      {
        "name": "attachment_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.attachments.id",
        "description": "Attachment (public.attachments.id) linked to the invoice."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the attachment was linked to the invoice."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "invoice_id",
          "references": "public.invoices.id",
          "description": "Invoice (public.invoices.id) that the file belongs to."
        },
        {
          "column": "attachment_id",
          "references": "public.attachments.id",
          "description": "Attachment (public.attachments.id) linked to the invoice."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_19379_1_not_null"
        },
        {
          "name": "2200_19379_2_not_null"
        },
        {
          "name": "2200_19379_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_invoice_attachments_attachment_id",
        "columns": [
          "attachment_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoice_attachments_invoice_id",
        "columns": [
          "invoice_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.invoice_payments",
    "summary": "Allocation of payments to invoices.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the invoice-payment allocation."
      },
      {
        "name": "invoice_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.invoices.id",
        "description": "Invoice (public.invoices.id) receiving the allocation."
      },
      {
        "name": "payment_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.payments.id",
        "description": "Payment (public.payments.id) allocated to the invoice."
      },
      {
        "name": "allocated_amount",
        "type": "numeric(15,2)",
        "nullable": false,
        "description": "Portion of the payment applied to the invoice."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the allocation was recorded."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "invoice_id",
          "references": "public.invoices.id",
          "description": "Invoice (public.invoices.id) receiving the allocation."
        },
        {
          "column": "payment_id",
          "references": "public.payments.id",
          "description": "Payment (public.payments.id) allocated to the invoice."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_19891_1_not_null"
        },
        {
          "name": "2200_19891_2_not_null"
        },
        {
          "name": "2200_19891_3_not_null"
        },
        {
          "name": "2200_19891_4_not_null"
        },
        {
          "name": "positive_allocated_amount"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_invoice_payments_invoice_id",
        "columns": [
          "invoice_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoice_payments_payment_id",
        "columns": [
          "payment_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_delivery_date_on_payment_change",
        "timing": "AFTER",
        "events": [
          "INSERT",
          "DELETE",
          "UPDATE"
        ],
        "function": "public.recalculate_invoice_delivery_date()"
      }
    ]
  },
  {
    "table": "public.invoice_statuses",
    "summary": "Reference list of invoice workflow statuses.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('invoice_statuses_id_seq'::regclass)",
        "description": "Primary key of the invoice status."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Unique status code used in API and UI."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the invoice status."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description clarifying when to use the status."
      },
      {
        "name": "sort_order",
        "type": "integer",
        "nullable": true,
        "description": "Ordering weight used when listing statuses."
      },
      {
        "name": "color",
        "type": "varchar(20)",
        "nullable": true,
        "description": "Optional UI color token or hex code for the status."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice status was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice status was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "invoice_statuses_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_19183_1_not_null"
        },
        {
          "name": "2200_19183_2_not_null"
        },
        {
          "name": "2200_19183_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_invoice_statuses_code",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "idx_invoice_statuses_sort_order",
        "columns": [
          "sort_order"
        ],
        "unique": false
      },
      {
        "name": "invoice_statuses_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_invoice_statuses_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.invoice_types",
    "summary": "Reference list of invoice classification types.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('invoice_types_id_seq'::regclass)",
        "description": "Primary key of the invoice type."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Unique code representing the invoice type."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the invoice type."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional explanation of what the invoice type represents."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice type record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice type record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "invoice_types_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18911_1_not_null"
        },
        {
          "name": "2200_18911_2_not_null"
        },
        {
          "name": "2200_18911_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_invoice_types_code",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "invoice_types_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_invoice_types_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.invoices",
    "summary": "Outbound invoices issued from PayHub.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "uuid_generate_v4()",
        "description": "Primary key of the invoice (UUID)."
      },
      {
        "name": "user_id",
        "type": "uuid",
        "nullable": false,
        "description": "Supabase auth user who created or owns the invoice."
      },
      {
        "name": "invoice_number",
        "type": "text",
        "nullable": false,
        "description": "Human readable invoice number shown to customers."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional invoice description or customer note."
      },
      {
        "name": "due_date",
        "type": "date",
        "nullable": true,
        "description": "Date by which payment is expected."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the invoice record was last updated."
      },
      {
        "name": "invoice_date",
        "type": "date",
        "nullable": false,
        "default": "CURRENT_DATE",
        "description": "Calendar date printed on the invoice."
      },
      {
        "name": "payer_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.contractors.id",
        "description": "Contractor acting as payer (public.contractors.id)."
      },
      {
        "name": "supplier_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.contractors.id",
        "description": "Contractor acting as supplier (public.contractors.id)."
      },
      {
        "name": "project_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.projects.id",
        "description": "Project associated with the invoice (public.projects.id)."
      },
      {
        "name": "invoice_type_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.invoice_types.id",
        "description": "Invoice type reference (public.invoice_types.id)."
      },
      {
        "name": "amount_with_vat",
        "type": "numeric(15,2)",
        "nullable": true,
        "description": "Invoice total amount including VAT."
      },
      {
        "name": "vat_rate",
        "type": "numeric(5,2)",
        "nullable": true,
        "default": "20",
        "description": "VAT rate applied to the invoice total, in percent."
      },
      {
        "name": "vat_amount",
        "type": "numeric(15,2)",
        "nullable": true,
        "description": "VAT portion of the invoice total."
      },
      {
        "name": "amount_without_vat",
        "type": "numeric(15,2)",
        "nullable": true,
        "description": "Invoice amount excluding VAT."
      },
      {
        "name": "delivery_days",
        "type": "integer",
        "nullable": true,
        "description": "Number of days required for delivery after payment."
      },
      {
        "name": "delivery_days_type",
        "type": "varchar(20)",
        "nullable": true,
        "default": "'working'::character varying",
        "description": "Interpretation of delivery days (working or calendar)."
      },
      {
        "name": "preliminary_delivery_date",
        "type": "date",
        "nullable": true,
        "description": "Projected delivery date calculated from payment terms."
      },
      {
        "name": "status_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.invoice_statuses.id",
        "description": "Workflow status of the invoice (public.invoice_statuses.id)."
      },
      {
        "name": "delivery_cost",
        "type": "numeric(12,2)",
        "nullable": true,
        "default": "0",
        "description": "Стоимость доставки в рублях"
      },
      {
        "name": "relevance_date",
        "type": "date",
        "nullable": false,
        "default": "CURRENT_TIMESTAMP",
        "description": "Конечная дата актуальности счёта"
      },
      {
        "name": "material_request_id",
        "type": "uuid",
        "nullable": true,
        "description": "Ссылка на связанную заявку на материалы"
      },
      {
        "name": "contract_id",
        "type": "uuid",
        "nullable": true,
        "description": "Ссылка на связанный договор"
      },
      {
        "name": "responsible_id",
        "type": "uuid",
        "nullable": true,
        "fk": "public.user_profiles.id",
        "description": "Ответственный менеджер снабжения (public.user_profiles.id)"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "payer_id",
          "references": "public.contractors.id",
          "description": "Contractor acting as payer (public.contractors.id)."
        },
        {
          "column": "supplier_id",
          "references": "public.contractors.id",
          "description": "Contractor acting as supplier (public.contractors.id)."
        },
        {
          "column": "project_id",
          "references": "public.projects.id",
          "description": "Project associated with the invoice (public.projects.id)."
        },
        {
          "column": "invoice_type_id",
          "references": "public.invoice_types.id",
          "description": "Invoice type reference (public.invoice_types.id)."
        },
        {
          "column": "status_id",
          "references": "public.invoice_statuses.id",
          "description": "Workflow status of the invoice (public.invoice_statuses.id)."
        },
        {
          "column": "responsible_id",
          "references": "public.user_profiles.id",
          "description": "Ответственный менеджер снабжения (public.user_profiles.id)"
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_18252_10_not_null"
        },
        {
          "name": "2200_18252_1_not_null"
        },
        {
          "name": "2200_18252_22_not_null"
        },
        {
          "name": "2200_18252_24_not_null"
        },
        {
          "name": "2200_18252_2_not_null"
        },
        {
          "name": "2200_18252_3_not_null"
        },
        {
          "name": "invoices_delivery_days_type_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_invoices_contract_id",
        "columns": [
          "contract_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_created_at",
        "columns": [
          "created_at DESC"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_invoice_date",
        "columns": [
          "invoice_date"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_invoice_type_id",
        "columns": [
          "invoice_type_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_material_request",
        "columns": [
          "material_request_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_material_request_id",
        "columns": [
          "material_request_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_payer_id",
        "columns": [
          "payer_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_project_id",
        "columns": [
          "project_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_responsible_id",
        "columns": [
          "responsible_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_status_id",
        "columns": [
          "status_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_supplier_id",
        "columns": [
          "supplier_id"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_updated_at",
        "columns": [
          "updated_at DESC"
        ],
        "unique": false
      },
      {
        "name": "idx_invoices_user_id",
        "columns": [
          "user_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_invoices_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.material_classes",
    "summary": "",
    "columns": [
      {
        "name": "id",
        "type": "bigint",
        "nullable": false,
        "pk": true
      },
      {
        "name": "name",
        "type": "text",
        "nullable": false
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": true,
        "default": "true"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "CURRENT_TIMESTAMP"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "CURRENT_TIMESTAMP"
      },
      {
        "name": "parent_id",
        "type": "bigint",
        "nullable": true
      },
      {
        "name": "level",
        "type": "integer",
        "nullable": true,
        "default": "0"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "material_classes_name_key",
          "columns": [
            "name"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_21264_1_not_null"
        },
        {
          "name": "2200_21264_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_material_classes_is_active",
        "columns": [
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "idx_material_classes_level",
        "columns": [
          "level"
        ],
        "unique": false
      },
      {
        "name": "idx_material_classes_parent",
        "columns": [
          "parent_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_classes_parent_active",
        "columns": [
          "parent_id",
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "material_classes_name_key",
        "columns": [
          "name"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_material_classes_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.material_nomenclature",
    "summary": "",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('material_nomenclature_id_seq'::regclass)"
      },
      {
        "name": "name",
        "type": "varchar(500)",
        "nullable": false
      },
      {
        "name": "unit",
        "type": "varchar(50)",
        "nullable": false
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": true,
        "default": "true"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "material_class_id",
        "type": "integer",
        "nullable": true
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [],
      "checks": [
        {
          "name": "2200_23111_1_not_null"
        },
        {
          "name": "2200_23111_2_not_null"
        },
        {
          "name": "2200_23111_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_material_nomenclature_active",
        "columns": [
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "idx_material_nomenclature_class",
        "columns": [
          "material_class_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_nomenclature_name",
        "columns": [
          "name"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_material_nomenclature_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.material_request_attachments",
    "summary": "Связь заявок на материалы с приложенными файлами",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Уникальный идентификатор связи"
      },
      {
        "name": "material_request_id",
        "type": "uuid",
        "nullable": false,
        "description": "ID заявки на материалы"
      },
      {
        "name": "attachment_id",
        "type": "uuid",
        "nullable": false,
        "description": "ID вложенного файла"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Время создания связи"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "material_request_attachments_unique",
          "columns": [
            "attachment_id",
            "material_request_id"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_23552_1_not_null"
        },
        {
          "name": "2200_23552_2_not_null"
        },
        {
          "name": "2200_23552_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_material_request_attachments_attachment_id",
        "columns": [
          "attachment_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_request_attachments_request_id",
        "columns": [
          "material_request_id"
        ],
        "unique": false
      },
      {
        "name": "material_request_attachments_unique",
        "columns": [
          "material_request_id",
          "attachment_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.material_request_items",
    "summary": "Позиции в заявках на материалы",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Уникальный идентификатор позиции"
      },
      {
        "name": "material_request_id",
        "type": "uuid",
        "nullable": false,
        "description": "Ссылка на заявку"
      },
      {
        "name": "material_name",
        "type": "varchar(500)",
        "nullable": false,
        "description": "Наименование материала"
      },
      {
        "name": "unit",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Единица измерения (шт, кг, м, м2, м3, л и т.д.)"
      },
      {
        "name": "quantity",
        "type": "numeric(15,3)",
        "nullable": false,
        "description": "Количество"
      },
      {
        "name": "sort_order",
        "type": "integer",
        "nullable": true,
        "default": "0",
        "description": "Порядок сортировки позиций"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "nomenclature_id",
        "type": "integer",
        "nullable": true
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [],
      "checks": [
        {
          "name": "2200_21636_1_not_null"
        },
        {
          "name": "2200_21636_2_not_null"
        },
        {
          "name": "2200_21636_3_not_null"
        },
        {
          "name": "2200_21636_4_not_null"
        },
        {
          "name": "2200_21636_5_not_null"
        },
        {
          "name": "material_request_items_quantity_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_material_request_items_nomenclature",
        "columns": [
          "nomenclature_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_request_items_request",
        "columns": [
          "material_request_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_request_items_sort",
        "columns": [
          "sort_order"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_material_request_items_count_trigger",
        "timing": "AFTER",
        "events": [
          "INSERT",
          "DELETE"
        ],
        "function": "public.update_material_request_items_count()"
      }
    ]
  },
  {
    "table": "public.material_requests",
    "summary": "Заявки на материалы",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Уникальный идентификатор заявки"
      },
      {
        "name": "request_number",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Номер заявки"
      },
      {
        "name": "request_date",
        "type": "date",
        "nullable": false,
        "default": "CURRENT_DATE",
        "description": "Дата создания заявки"
      },
      {
        "name": "project_id",
        "type": "integer",
        "nullable": true,
        "description": "Ссылка на проект"
      },
      {
        "name": "employee_id",
        "type": "integer",
        "nullable": true,
        "description": "Ответственный сотрудник"
      },
      {
        "name": "total_items",
        "type": "integer",
        "nullable": true,
        "default": "0",
        "description": "Общее количество позиций в заявке"
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "description": "Пользователь, создавший заявку"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [],
      "checks": [
        {
          "name": "2200_21608_1_not_null"
        },
        {
          "name": "2200_21608_2_not_null"
        },
        {
          "name": "2200_21608_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_material_requests_date",
        "columns": [
          "request_date"
        ],
        "unique": false
      },
      {
        "name": "idx_material_requests_employee",
        "columns": [
          "employee_id"
        ],
        "unique": false
      },
      {
        "name": "idx_material_requests_project",
        "columns": [
          "project_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_material_requests_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.payment_approvals",
    "summary": "Payment approval processes. One payment can have multiple approval processes (history of all attempts).",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the payment approval."
      },
      {
        "name": "payment_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.payments.id",
        "description": "Payment (public.payments.id) that is being approved."
      },
      {
        "name": "route_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.approval_routes.id",
        "description": "Approval route (public.approval_routes.id) used for the payment."
      },
      {
        "name": "status_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.payment_statuses.id",
        "description": "Current status of the approval (public.payment_statuses.id)."
      },
      {
        "name": "current_stage_index",
        "type": "integer",
        "nullable": false,
        "default": "0",
        "description": "Zero-based index of the current stage within the route."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the approval instance was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the approval instance was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "payment_id",
          "references": "public.payments.id",
          "description": "Payment (public.payments.id) that is being approved."
        },
        {
          "column": "route_id",
          "references": "public.approval_routes.id",
          "description": "Approval route (public.approval_routes.id) used for the payment."
        },
        {
          "column": "status_id",
          "references": "public.payment_statuses.id",
          "description": "Current status of the approval (public.payment_statuses.id)."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_20117_1_not_null"
        },
        {
          "name": "2200_20117_2_not_null"
        },
        {
          "name": "2200_20117_3_not_null"
        },
        {
          "name": "2200_20117_4_not_null"
        },
        {
          "name": "2200_20117_5_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_payment_approvals_payment",
        "columns": [
          "payment_id"
        ],
        "unique": false
      },
      {
        "name": "idx_payment_approvals_status",
        "columns": [
          "status_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_payment_approvals_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.payment_attachments",
    "summary": "Associates payments with stored attachments.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the payment-attachment relation."
      },
      {
        "name": "payment_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.payments.id",
        "description": "Payment (public.payments.id) that the file is attached to."
      },
      {
        "name": "attachment_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.attachments.id",
        "description": "Attachment (public.attachments.id) linked to the payment."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the attachment was linked to the payment."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "payment_id",
          "references": "public.payments.id",
          "description": "Payment (public.payments.id) that the file is attached to."
        },
        {
          "column": "attachment_id",
          "references": "public.attachments.id",
          "description": "Attachment (public.attachments.id) linked to the payment."
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_19998_1_not_null"
        },
        {
          "name": "2200_19998_2_not_null"
        },
        {
          "name": "2200_19998_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_payment_attachments_attachment_id",
        "columns": [
          "attachment_id"
        ],
        "unique": false
      },
      {
        "name": "idx_payment_attachments_payment_id",
        "columns": [
          "payment_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.payment_statuses",
    "summary": "Reference list of payment statuses.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('payment_statuses_id_seq'::regclass)",
        "description": "Primary key of the payment status."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Unique code identifying the payment status."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the payment status."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description of what the payment status means."
      },
      {
        "name": "sort_order",
        "type": "integer",
        "nullable": true,
        "description": "Ordering weight used when listing payment statuses."
      },
      {
        "name": "color",
        "type": "varchar(20)",
        "nullable": true,
        "description": "Optional UI color token or hex code for the payment status."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment status was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment status was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "payment_statuses_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_19825_1_not_null"
        },
        {
          "name": "2200_19825_2_not_null"
        },
        {
          "name": "2200_19825_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "payment_statuses_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_payment_statuses_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.payment_types",
    "summary": "Reference list of payment types (advance, final, etc.).",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('payment_types_id_seq'::regclass)",
        "description": "Primary key of the payment type."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Unique code used to reference the payment type."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the payment type."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description of how the payment type is used."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment type record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment type record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "payment_types_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_19838_1_not_null"
        },
        {
          "name": "2200_19838_2_not_null"
        },
        {
          "name": "2200_19838_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "payment_types_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_payment_types_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.payments",
    "summary": "Payments registered against invoices in PayHub.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "default": "gen_random_uuid()",
        "description": "Primary key of the payment (UUID)."
      },
      {
        "name": "invoice_id",
        "type": "uuid",
        "nullable": false,
        "fk": "public.invoices.id",
        "description": "Invoice (public.invoices.id) that the payment relates to."
      },
      {
        "name": "payment_number",
        "type": "integer",
        "nullable": false,
        "default": "nextval('payment_number_seq'::regclass)",
        "description": "Unique sequential number of the payment."
      },
      {
        "name": "payment_date",
        "type": "date",
        "nullable": false,
        "default": "CURRENT_DATE",
        "description": "Date on which the payment was made."
      },
      {
        "name": "amount",
        "type": "numeric(15,2)",
        "nullable": false,
        "description": "Monetary amount of the payment."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description or purpose of the payment."
      },
      {
        "name": "payment_type_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.payment_types.id",
        "description": "Payment type (public.payment_types.id)."
      },
      {
        "name": "status_id",
        "type": "integer",
        "nullable": true,
        "default": "1",
        "fk": "public.payment_statuses.id",
        "description": "Current payment status (public.payment_statuses.id)."
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who created the payment record."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the payment record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "invoice_id",
          "references": "public.invoices.id",
          "description": "Invoice (public.invoices.id) that the payment relates to."
        },
        {
          "column": "payment_type_id",
          "references": "public.payment_types.id",
          "description": "Payment type (public.payment_types.id)."
        },
        {
          "column": "status_id",
          "references": "public.payment_statuses.id",
          "description": "Current payment status (public.payment_statuses.id)."
        },
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who created the payment record."
        }
      ],
      "unique": [
        {
          "name": "payments_payment_number_key",
          "columns": [
            "payment_number"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_19851_1_not_null"
        },
        {
          "name": "2200_19851_2_not_null"
        },
        {
          "name": "2200_19851_3_not_null"
        },
        {
          "name": "2200_19851_4_not_null"
        },
        {
          "name": "2200_19851_5_not_null"
        },
        {
          "name": "positive_amount"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_payments_created_by",
        "columns": [
          "created_by"
        ],
        "unique": false
      },
      {
        "name": "idx_payments_invoice_id",
        "columns": [
          "invoice_id"
        ],
        "unique": false
      },
      {
        "name": "idx_payments_payment_date",
        "columns": [
          "payment_date"
        ],
        "unique": false
      },
      {
        "name": "idx_payments_status_id",
        "columns": [
          "status_id"
        ],
        "unique": false
      },
      {
        "name": "idx_payments_updated_at",
        "columns": [
          "updated_at DESC"
        ],
        "unique": false
      },
      {
        "name": "payments_payment_number_key",
        "columns": [
          "payment_number"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_payments_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.positions",
    "summary": "Должности сотрудников",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('positions_id_seq'::regclass)"
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "positions_name_key",
          "columns": [
            "name"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_20804_1_not_null"
        },
        {
          "name": "2200_20804_2_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "positions_name_key",
        "columns": [
          "name"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_positions_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.project_budgets",
    "summary": "Budget allocations for projects",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('project_budgets_id_seq'::regclass)",
        "description": "Primary key of the budget record"
      },
      {
        "name": "project_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.projects.id",
        "description": "Foreign key to public.projects.id"
      },
      {
        "name": "allocated_amount",
        "type": "numeric(15,2)",
        "nullable": false,
        "default": "0",
        "description": "Total amount allocated to the project"
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description for the budget allocation"
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who created the budget record"
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the budget was created"
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the budget was last updated"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "project_id",
          "references": "public.projects.id",
          "description": "Foreign key to public.projects.id"
        },
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who created the budget record"
        }
      ],
      "unique": [],
      "checks": [
        {
          "name": "2200_26027_1_not_null"
        },
        {
          "name": "2200_26027_2_not_null"
        },
        {
          "name": "2200_26027_3_not_null"
        },
        {
          "name": "project_budgets_allocated_amount_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_project_budgets_created_by",
        "columns": [
          "created_by"
        ],
        "unique": false
      },
      {
        "name": "idx_project_budgets_project_id",
        "columns": [
          "project_id"
        ],
        "unique": false
      },
      {
        "name": "project_budgets_project_id_key",
        "columns": [
          "project_id"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_project_budgets_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.projects",
    "summary": "Projects used to group invoices and contractors.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('projects_id_seq'::regclass)",
        "description": "Primary key of the project."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": true,
        "description": "Optional unique project code used in integrations and search."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the project."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional project description for internal users."
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": true,
        "default": "true",
        "description": "TRUE when the project is active."
      },
      {
        "name": "created_by",
        "type": "uuid",
        "nullable": true,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who created the project."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the project record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the project record was last updated."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "created_by",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who created the project."
        }
      ],
      "unique": [
        {
          "name": "projects_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18372_1_not_null"
        },
        {
          "name": "2200_18372_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_projects_code",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "idx_projects_is_active",
        "columns": [
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "projects_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_projects_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.roles",
    "summary": "Roles that define access levels inside PayHub.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('roles_id_seq'::regclass)",
        "description": "Primary key of the role."
      },
      {
        "name": "code",
        "type": "varchar(50)",
        "nullable": false,
        "description": "Unique machine-readable code of the role."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": false,
        "description": "Display name of the role."
      },
      {
        "name": "description",
        "type": "text",
        "nullable": true,
        "description": "Optional description of the role permissions."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the role record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the role record was last updated."
      },
      {
        "name": "own_projects_only",
        "type": "boolean",
        "nullable": true,
        "default": "false",
        "description": "TRUE when the role limits users to their own projects."
      },
      {
        "name": "allowed_pages",
        "type": "jsonb",
        "nullable": true,
        "description": "JSON array of allowed page paths for this role"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [],
      "unique": [
        {
          "name": "roles_code_key",
          "columns": [
            "code"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18359_1_not_null"
        },
        {
          "name": "2200_18359_2_not_null"
        },
        {
          "name": "2200_18359_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_roles_allowed_pages",
        "columns": [
          "allowed_pages"
        ],
        "unique": false
      },
      {
        "name": "idx_roles_code",
        "columns": [
          "code"
        ],
        "unique": false
      },
      {
        "name": "roles_code_key",
        "columns": [
          "code"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_roles_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.user_profiles",
    "summary": "Mirror of Supabase auth user profiles stored in the public schema.",
    "columns": [
      {
        "name": "id",
        "type": "uuid",
        "nullable": false,
        "pk": true,
        "fk": "auth.users.id",
        "description": "Primary key of the profile and foreign key to auth.users.id."
      },
      {
        "name": "email",
        "type": "text",
        "nullable": false,
        "description": "Primary email address associated with the user profile."
      },
      {
        "name": "full_name",
        "type": "text",
        "nullable": false,
        "description": "Display name of the user."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the profile record was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the profile record was last updated."
      },
      {
        "name": "role_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.roles.id",
        "description": "Role (public.roles.id) assigned to the user."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "id",
          "references": "auth.users.id",
          "description": "Primary key of the profile and foreign key to auth.users.id."
        },
        {
          "column": "role_id",
          "references": "public.roles.id",
          "description": "Role (public.roles.id) assigned to the user."
        }
      ],
      "unique": [
        {
          "name": "user_profiles_email_key",
          "columns": [
            "email"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18236_1_not_null"
        },
        {
          "name": "2200_18236_2_not_null"
        },
        {
          "name": "2200_18236_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "user_profiles_email_key",
        "columns": [
          "email"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_user_profiles_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  },
  {
    "table": "public.user_projects",
    "summary": "Mapping table assigning users to projects for access control.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "default": "nextval('user_projects_id_seq'::regclass)",
        "description": "Primary key of the user-project link."
      },
      {
        "name": "user_id",
        "type": "uuid",
        "nullable": false,
        "fk": "auth.users.id",
        "description": "User (auth.users.id) who receives access to the project."
      },
      {
        "name": "project_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.projects.id",
        "description": "Project (public.projects.id) granted to the user."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the user-project link was created."
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "user_id",
          "references": "auth.users.id",
          "description": "User (auth.users.id) who receives access to the project."
        },
        {
          "column": "project_id",
          "references": "public.projects.id",
          "description": "Project (public.projects.id) granted to the user."
        }
      ],
      "unique": [
        {
          "name": "user_projects_user_project_unique",
          "columns": [
            "project_id",
            "user_id"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_18517_1_not_null"
        },
        {
          "name": "2200_18517_2_not_null"
        },
        {
          "name": "2200_18517_3_not_null"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_user_projects_project_id",
        "columns": [
          "project_id"
        ],
        "unique": false
      },
      {
        "name": "idx_user_projects_user_id",
        "columns": [
          "user_id"
        ],
        "unique": false
      },
      {
        "name": "user_projects_user_project_unique",
        "columns": [
          "user_id",
          "project_id"
        ],
        "unique": false
      }
    ],
    "triggers": []
  },
  {
    "table": "public.workflow_stages",
    "summary": "Workflow stages that build approval routes and set payment statuses.",
    "columns": [
      {
        "name": "id",
        "type": "integer",
        "nullable": false,
        "pk": true,
        "description": "Primary key of the workflow stage."
      },
      {
        "name": "route_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.approval_routes.id",
        "description": "Approval route (public.approval_routes.id) the stage belongs to."
      },
      {
        "name": "order_index",
        "type": "integer",
        "nullable": false,
        "description": "Zero-based order of the stage within the route."
      },
      {
        "name": "role_id",
        "type": "integer",
        "nullable": false,
        "fk": "public.roles.id",
        "description": "Role (public.roles.id) responsible for processing the stage."
      },
      {
        "name": "name",
        "type": "varchar(255)",
        "nullable": true,
        "description": "Display name of the workflow stage."
      },
      {
        "name": "created_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the workflow stage was created."
      },
      {
        "name": "updated_at",
        "type": "timestamptz",
        "nullable": true,
        "default": "now()",
        "description": "Timestamp when the workflow stage was last updated."
      },
      {
        "name": "payment_status_id",
        "type": "integer",
        "nullable": true,
        "fk": "public.payment_statuses.id",
        "description": "Payment status (public.payment_statuses.id) applied after the stage is completed."
      },
      {
        "name": "permissions",
        "type": "jsonb",
        "nullable": true,
        "default": "'{}'::jsonb",
        "description": "JSON object storing stage-specific permissions like can_edit_invoice, can_add_files, can_edit_amount, etc."
      },
      {
        "name": "is_active",
        "type": "boolean",
        "nullable": true,
        "default": "true",
        "description": "Soft deletion flag to preserve referential integrity with approval_steps table"
      }
    ],
    "constraints": {
      "primary_key": [
        "id"
      ],
      "foreign_keys": [
        {
          "column": "route_id",
          "references": "public.approval_routes.id",
          "description": "Approval route (public.approval_routes.id) the stage belongs to."
        },
        {
          "column": "role_id",
          "references": "public.roles.id",
          "description": "Role (public.roles.id) responsible for processing the stage."
        },
        {
          "column": "payment_status_id",
          "references": "public.payment_statuses.id",
          "description": "Payment status (public.payment_statuses.id) applied after the stage is completed."
        }
      ],
      "unique": [
        {
          "name": "workflow_stages_route_id_order_index_key",
          "columns": [
            "order_index",
            "route_id"
          ]
        }
      ],
      "checks": [
        {
          "name": "2200_20097_1_not_null"
        },
        {
          "name": "2200_20097_2_not_null"
        },
        {
          "name": "2200_20097_3_not_null"
        },
        {
          "name": "2200_20097_4_not_null"
        },
        {
          "name": "workflow_stages_order_index_check"
        }
      ]
    },
    "indexes": [
      {
        "name": "idx_workflow_stages_is_active",
        "columns": [
          "is_active"
        ],
        "unique": false
      },
      {
        "name": "idx_workflow_stages_payment_status",
        "columns": [
          "payment_status_id"
        ],
        "unique": false
      },
      {
        "name": "idx_workflow_stages_permissions",
        "columns": [
          "permissions"
        ],
        "unique": false
      },
      {
        "name": "idx_workflow_stages_role",
        "columns": [
          "role_id"
        ],
        "unique": false
      },
      {
        "name": "idx_workflow_stages_route",
        "columns": [
          "route_id"
        ],
        "unique": false
      },
      {
        "name": "workflow_stages_route_id_order_index_key",
        "columns": [
          "route_id",
          "order_index"
        ],
        "unique": false
      }
    ],
    "triggers": [
      {
        "trigger": "update_workflow_stages_updated_at",
        "timing": "BEFORE",
        "events": [
          "UPDATE"
        ],
        "function": "public.update_updated_at_column()"
      }
    ]
  }
]
